// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InMemoryEventStore Can have multiple different events streams: InMemoryEventStore 1`] = `
InMemoryEventStore {
  "events": ValueMutex {
    "lastSetValue": 2,
    "mutex": Mutex {
      "_semaphore": Semaphore {
        "_currentReleaser": [Function],
        "_queue": Array [],
        "_value": 1,
      },
    },
    "value": Array [
      DomainMessage {
        "aggregateId": ScalarIdentity {
          "id": "aggregate1 ID",
        },
        "metadata": Object {},
        "payload": DomainEvent {},
        "playhead": 0,
        "recordedOn": 1970-01-18T18:26:23.762Z,
      },
      DomainMessage {
        "aggregateId": ScalarIdentity {
          "id": "aggregate1 ID",
        },
        "metadata": Object {},
        "payload": DomainEvent {},
        "playhead": 1,
        "recordedOn": 1970-01-18T18:26:23.762Z,
      },
      DomainMessage {
        "aggregateId": ScalarIdentity {
          "id": "aggregate2 ID",
        },
        "metadata": Object {},
        "payload": DomainEvent {},
        "playhead": 0,
        "recordedOn": 1970-01-18T18:26:23.762Z,
      },
      DomainMessage {
        "aggregateId": ScalarIdentity {
          "id": "aggregate2 ID",
        },
        "metadata": Object {},
        "payload": DomainEvent {},
        "playhead": 1,
        "recordedOn": 1970-01-18T18:26:23.762Z,
      },
    ],
  },
  "eventsMap": Map {
    ScalarIdentity {
      "id": "aggregate1 ID",
    } => ValueMutex {
      "lastSetValue": 1,
      "mutex": Mutex {
        "_semaphore": Semaphore {
          "_currentReleaser": [Function],
          "_queue": Array [],
          "_value": 1,
        },
      },
      "value": Array [
        DomainMessage {
          "aggregateId": ScalarIdentity {
            "id": "aggregate1 ID",
          },
          "metadata": Object {},
          "payload": DomainEvent {},
          "playhead": 0,
          "recordedOn": 1970-01-18T18:26:23.762Z,
        },
        DomainMessage {
          "aggregateId": ScalarIdentity {
            "id": "aggregate1 ID",
          },
          "metadata": Object {},
          "payload": DomainEvent {},
          "playhead": 1,
          "recordedOn": 1970-01-18T18:26:23.762Z,
        },
      ],
    },
    ScalarIdentity {
      "id": "aggregate2 ID",
    } => ValueMutex {
      "lastSetValue": 1,
      "mutex": Mutex {
        "_semaphore": Semaphore {
          "_currentReleaser": [Function],
          "_queue": Array [],
          "_value": 1,
        },
      },
      "value": Array [
        DomainMessage {
          "aggregateId": ScalarIdentity {
            "id": "aggregate2 ID",
          },
          "metadata": Object {},
          "payload": DomainEvent {},
          "playhead": 0,
          "recordedOn": 1970-01-18T18:26:23.762Z,
        },
        DomainMessage {
          "aggregateId": ScalarIdentity {
            "id": "aggregate2 ID",
          },
          "metadata": Object {},
          "payload": DomainEvent {},
          "playhead": 1,
          "recordedOn": 1970-01-18T18:26:23.762Z,
        },
      ],
    },
  },
  "mutexFactory": [Function],
}
`;
